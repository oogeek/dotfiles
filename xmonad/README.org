#+TITLE: Myconfig
#+DESCRIPTION: my Xmonad config
#+PROPERTY: header-args :tangle xmonad.hs
#+STARTUP: showeverything

* Table of Contents :toc:
- [[#introduction][Introduction]]
- [[#screenshots][screenshots]]
- [[#requirements][Requirements]]
- [[#installation][Installation]]
  - [[#git-clone-a-lot-of-things][Git clone a lot of things]]
  - [[#starting-xmonad][Starting Xmonad]]
- [[#notice][Notice]]
- [[#keyboard-shortcuts][Keyboard shortcuts]]

* Introduction
#+BEGIN_QUOTE
xmonad is a tiling window manager for X. Windows are arranged automatically to tile the screen without gaps or overlap, maximizing screen use. Window manager features are accessible from the keyboard: a mouse is optional.

xmonad is written, configured and extensible in Haskell. Custom layout algorithms, key bindings and other extensions may be written by the user in configuration files.

Layouts are applied dynamically, and different layouts may be used on each workspace. Xinerama is fully supported, allowing windows to be tiled on several physical screens.
#+END_QUOTE
from [[https://wiki.archlinux.org/index.php/Xmonad][Xmonad Arch Wiki]]
* screenshots
#+CAPTION: screenshot-1
#+ATTR_HTML: :alt screenshot-1 :style width="600px" height="338px" :title screenshot-1 :align left
[[https://github.com/oogeek/dotfiles/blob/main/Xmonad/workspaces.png]]
* Requirements
- xmonad git
- xmonad-contrib git
- xmobar
- rofi (optional)
- task (optional) -- a task manager
- conky (optional)

* Installation
** Git clone a lot of things
Now assume you want to put things in ~/.xmonad (You can also put it in ~/.config/xmonad)
#+BEGIN_SRC bash
cd ~/.xmonad
git clone https://github.com/xmonad/xmonad-contrib.git
git clone https://github.com/xmonad/xmonad.git

// If you want to use statically linked xmonad
yay stack-static
#+END_SRC

I provide a put.sh that will put extra files in the correct place.
After that,
#+BEGIN_SRC bash
stack init
stack build
stack install
#+END_SRC

Don't forget to add ~/.local/bin to your PATH variable.

** Starting Xmonad
*** startx
#+BEGIN_SRC bash 
#!/bin/sh

userresources=$HOME/.Xresources
usermodmap=$HOME/.Xmodmap
sysresources=/etc/X11/xinit/.Xresources
sysmodmap=/etc/X11/xinit/.Xmodmap

# merge in defaults and keymaps

if [ -f $sysresources ]; then
    xrdb -merge $sysresources
fi

if [ -f $sysmodmap ]; then
    xmodmap $sysmodmap
fi

if [ -f "$userresources" ]; then
    xrdb -merge "$userresources"
fi

if [ -f "$usermodmap" ]; then
    xmodmap "$usermodmap"
fi

# start some nice programs

if [ -d /etc/X11/xinit/xinitrc.d ] ; then
 for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do
  [ -x "$f" ] && . "$f"
 done
 unset f
fi

# Here Xmonad is kept as default
session=${1:-xmonad}
case $session in
    i3|i3wm           ) exec i3;;
    dwm           ) exec dwm;;
    kde               ) exec startplasma-x11;;
    xfce|xfce4        ) exec startxfce4;;
    xmonad            ) exec xmonad;;
    qtile             ) exec qtile ;;
    awesome           ) exec awesome ;;
    *                 ) echo "hei, no option";;
esac
#+END_SRC

* Notice
No install scripts, do it yourself, and backup any config before testing.
The default keybindings for switching workspaces and shifting windows are replaced with the ones using numpad. The default ones are removed using "removeKeysP"

* Keyboard shortcuts

| Key conbination | action         |
|-----------------+----------------|
| XMonad          |                |
|-----------------+----------------|
| M-S-q           | exit           |
| M-S-r           | restart        |
| M-<Return>      | spawn terminal |


| Screenshots     |                |
|-----------------+----------------|
| M1-S-s          | flameshot gui  |


| Sound           |                |
|-----------------+----------------|
| M1-S-u          | pamixer -i 2   |
| M1-S-p          | pamixer -d 2   |
| M1-S-m          | pamixer -t     |


| Prompts         |                |
|-----------------+----------------|
| M-S-<Return>    | shellPrompt    |
| M-p m           | manPrompt      |
| M-p c           | calcPrompt     |
| M-p t           | taskAddPrompt  |
| M1-C-o          | rofimoji       |
| M-o             | bringMenuArgs' |
| M-M1-h          | htop           |


|--------------+----------------------|
| Notification |                      |
|--------------+----------------------|
| M1-c         | dunstctl close-all   |
| M1-p         | dunstctl history-pop |


| Windows            |                            |
|--------------------+----------------------------|
| M-S-<KP_Add>       | shiftTo next workspace     |
| M-S-<KP_Subtract>  | shiftTo previous workspace |
| M-f                | toggle floats              |
| M-t                | sink windows               |
| M-S-t              | sinkAll windows            |
| M-<KP_Subtract>    | decWindowSpacing           |
| M-<KP_Add>         | incWindowSpacing           |
| M-M1-<KP_Subtract> | decScreenSpacing           |
| M-M1-<KP_Add>      | incScreenSpacing           |
| C-g g              | myAppGrid                  |
| C-g t              | goToSelected               |
| C-g b              | bringSelected              |
| C-t t              | treeselectAction           |


| Tags  |                                  |
|-------+----------------------------------|
| M-C-a | Add tag                          |
| M-C-h | move window with tag here        |
| M-C-d | delete tag                       |
| M-C-t | toggle between taged windows     |
| M-C-f | float windows with specific tags |


| Dynamic workspaces |                                           |
|--------------------+-------------------------------------------|
| M1-C-a             | append workspaces                         |
| M1-C-d             | remove empty workspace                    |
| M1-C-s             | select workspace to go                    |
| M1-C-r             | rename Workspace                          |
| M1-C-c             | copy focused window to selected workspace |


| Window navigation |                                       |
|-------------------+---------------------------------------|
| M-m               | focus master                          |
| M-j               | focus down                            |
| M-k               | focus up                              |
| M-S-m             | swap master                           |
| M-S-j             | swap down                             |
| M-S-k             | swap up                               |
| M-<Backspace>     | promote to master                     |
| M-S-<Tab>         | rotate all windows except master      |
| M-C-<Tab>         | rotate all the windows                |
| M-S-c             | kill focused window                   |
| M-S-a             | kill all windows on current workspace |


| window copy |                              |
|-------------+------------------------------|
| M-C-S-0     | copy to all workspaces       |
| M-C-S-1     | copy to the first workspace  |
| M-C-S-2     | copy to the second workspace |
| ......      |                              |
| M-C-S-9     | copy to the ninth workspace  |
| M-C-S-k     | kill all other copies        |


| layouts       |                                    |
|---------------+------------------------------------|
| M-<Tab>       | switch layout                      |
| M-C-M1-<Up>   | arrange                            |
| M-C-M1-<Down> | dearrange                          |
| M-<Space>     | toggle full                        |
| M-S-<Space>   | toggle structs                     |
| M-S-n         | toggle noborders                   |
| M-S-<Up>      | increase master                    |
| M-S-<Down>    | decrease master                    |
| M-C-<Up>      | increase number of windows (limit) |
| M-C-<Down>    | decrease number of windows (limit) |


| window resizing |                     |
|-----------------+---------------------|
| M-h             | shrink horizontally |
| M-l             | expand horizontally |
| M-M1-j          | shrink vertically   |
| M-M1-k          | expand vertically   |

